/* Given an array, count how many numbers are positive, how many are negative, and how
many are zero.
int arr[] = {5, -3, 0, 12, -9, 0, 7};
 */

class Main
{
	public static void main(String[] args)
	{
	    int arr[]={5,-3,0,12,-9,0,7};
	    for(int i=0;i<arr.length;i++)
	    {
	        if(arr[i]>=0)
	        {
	            System.out.println("Positive :"+arr[i]);
	        }
	        else{
	            System.out.println("Negative :"+arr[i]);
	        }
	    }
	}
}

/* Second Largest Element in Array
Find the second largest number in an array.
int arr[] = {14, 28, 19, 33, 45, 12}; */

class Main
{
	public static void main(String[] args)
	{
	    int arr[]={14,28,19,33,45,12};
	    int max=arr[0];
	    int smax=arr[0];
	    for(int i=0;i<arr.length;i++)
	    {
	        if(arr[i]>=max)
	        {
	            smax=max;
	            max=arr[i];  
	        }
	        else if(arr[i]>=smax)
	        {
	            smax=arr[i];   
	        }
	        
	    }
	    System.out.println("Second max: "+smax);
	}
}

/* Array Element Frequency (Count Occurrence)
Find how many times a particular number appears in an array.
int arr[] = {2, 4, 2, 6, 2, 9, 6};
 Example: 2 appears 3 times, 6 appears 2 times */

class Main {
    public static void main(String[] args) {
        int[] arr = {2, 4, 2, 6, 2, 9, 6};
        int n = arr.length;

        for (int i = 0; i < n; i++) 
        {
            if (arr[i] == -1) 
            {  
                 continue;
            }
            int count = 1;
            for (int j = i + 1; j < n; j++) 
            {
                if (arr[i] == arr[j]) {
                    count++;
                    arr[j] = -1; 
                }
            }

            System.out.println(arr[i] + " appears " + count + " times");
        }
    }
}

/* Print Elements at Even Index Positions
Print only the elements stored at even index positions in an array.
int arr[] = {10, 20, 30, 40, 50, 60};
// should print 10, 30, 50  */
class Main
{
	public static void main(String[] args) {
	    int arr[]={10,20,30,40,50,60};
	    for(int i=0;i<arr.length;i+=2)
	    {
	        System.out.print(arr[i]+",");
	    }
	}
}

/*Reverse a Number using While Loop
Given a number, reverse its digits.
int n = 12345; // output: 54321*/

class Main
{
	public static void main(String[] args) {
	    int n=12345;
	    int ans=0;
	    int rem=0;
	    while(n>0)
	    {
	        rem=n%10;
	        ans=ans*10+rem;
	        n=n/10;
	    }
	    System.out.println(ans);
	}
}

/*For Loop: Print Squares of Numbers
Print the squares of numbers from 1 to 15 using a for loop.*/

class Main
{
	public static void main(String[] args) {
	    for(int i=1;i<=15;i++)
	    {
	        System.out.print(i*i+",");
	    }
	}
}

/*Check Armstrong Number
Check if a number is an Armstrong number.
int n = 153; // 13 + 53 + 33 = 153 â†’ Armstrong*/

class Main
{
	public static void main(String[] args) {
	    int n=153;
	    System.out.println(n);
	    int temp=n;
	    int rem=0;
	    int ans=0;
	    while(temp>0)
	    {
	        rem=temp%10;
	        ans=ans+(rem*rem*rem);
	        temp=temp/10;
	    }
	    if(n==ans){
	        System.out.println("Armstrong");
	    } 
	    else{
	        System.out.println("Not Armstrong");
	    }
	}
}

/*Check Palindrome Number
Check whether a number is a palindrome (reads the same forwards and backwards).
int n = 1221; // output: Palindrome*/

class Main
{
	public static void main(String[] args) 
        {
	    int n=1221;
	    int chk=n;
	    int ans=0;
	    int rem=0;
	    while(n>0)
	    {
	        rem=n%10;
	        ans=ans*10+rem;
	        n=n/10;
	    }
            if(ans==chk){
              System.out.println("Palindrome");
            }
            else{
            System.out.println("Not Palindrome");
            }
	}
}

/*Pattern Printing - Number Triangle
For n = 5, print the following pattern:
1
12
123
1234
12345*/

class Main
{
	public static void main(String[] args) {
	    int n=5;
	    for(int i=1;i<=5;i++)
	    {
	        for(int j=1;j<=i;j++)
	        {
	            System.out.print(j);
	        }
	        System.out.println();
	    }
	}
}

/*Pattern Printing - Pyramid of Stars
For n = 5, print the following pattern:
    *
   ***
  *****
 *******
*********  */

class Main
{
	public static void main(String[] args) {
	    int n=5;
	    int py=1;
	    for(int i=1;i<=n;i++)
	    {
	        for(int j=n;j>i;j--)
	        {
	            System.out.print(" ");
	        }
	        for(int k=1;k<=py;k++)
	        {
	            System.out.print("*");
	        }
	        py+=2;
	        System.out.println();
	    }
	}
}
